
namespace = ase_framework_events

# Called by on_yearly_pulse_country, but scope that called it doesn't matter, as there's no dependency on root scope
ase_framework_events.1 = {
    type = country_event
    hidden = yes

    # We ensure this is called only once per day by checking global variable...
    trigger = {
        OR = {
            NOT = {
                has_global_variable = ase_date_of_last_event_execution
            }
            ase_days_since_last_event_execution >= 1
        }
    }

    immediate = {
        
        # ...that contains date of the last execution of this event
        set_global_variable = {
            name = ase_date_of_last_event_execution
            value = game_date
        }

        # Make sure this event is actually called constantly, e.g. if there are too few countries worldwide
        # for on_yearly_pulse_country to be distributed over every single day of the month.
        ase_call_main_event_from_random_countries = yes

        if = {
            limit = {
                NOT = {
                    has_global_variable = ase_num_main_event_executions
                }
            }
            set_global_variable = {
                name = ase_num_main_event_executions
                value = 0
            }
        }
        change_global_variable = {
            name = ase_num_main_event_executions
            add = 1
        }

        if = {
            limit = {
                NOT = {
                    has_global_variable = ase_stockpile_loop_distribution
                }
            }
            ase_check_what_goods_are_available_globally = yes
            ase_initialize_stockpile_loop_distribution = yes
        }
        else = {
            change_global_variable = {
                name = ase_stockpile_loop_distribution
                add = 1
            }
            if = {
                limit = {
                    global_var:ase_stockpile_loop_distribution > 7
                }
                set_global_variable = {
                    name = ase_stockpile_loop_distribution
                    value = 1
                }
            }
        }

        # Every 14 days check if there are new countries allowed to stockpile, also re-set goods variables just in case
        if = {
            limit = {
                ase_num_main_event_executions_modulo_14 = 0
            }
            ase_initialize_stockpile_loop_distribution = yes
        }

        # Every 28 days check what goods are available globally
        if = {
            limit = {
                ase_num_main_event_executions_modulo_28 = 0
            }
            ase_check_what_goods_are_available_globally = yes
        }

        ase_stockpile_algorithm_initialize_markets = yes
    }
}

ase_framework_events.2 = {
    type = country_event
    hidden = yes

    immediate = {
        trigger_event = {
            id = ase_framework_events.1
        }
    }
}

ase_framework_events.3 = {
    type = country_event
    hidden = yes

    immediate = {
        if = {
            limit = {
                NOT = {
                    is_country_type = decentralized
                }
                this = market.owner
            }
            ase_recalculate_market_and_country_reserve = yes
        }
    }
}
